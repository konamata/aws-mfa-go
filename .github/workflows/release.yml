name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release and Push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'
          cache: false

      - name: Delete Existing Tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          TAG_NAME="v${VERSION}"
          if git rev-parse $TAG_NAME >/dev/null 2>&1; then
            git tag -d $TAG_NAME
            git push --delete origin $TAG_NAME
          fi

      - name: Create a Single Tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          TAG_NAME="v${VERSION}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Created TAG_NAME=${TAG_NAME}"

      - name: Create and Push Tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ steps.create_tag.outputs.TAG_NAME }}
          git push origin ${{ steps.create_tag.outputs.TAG_NAME }}

      - name: Build Binary for Release
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.create_tag.outputs.TAG_NAME }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          CGO_ENABLED=0 GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -o $BINARY_NAME -a -ldflags="-s -w" -installsuffix cgo

      - name: Verify Binary Existence
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.create_tag.outputs.TAG_NAME }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Verifying binary existence..."
          ls -la $BINARY_NAME

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.create_tag.outputs.TAG_NAME }}*
          tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
          name: ${{ steps.create_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT_TOKEN }}

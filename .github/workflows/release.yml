name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release and Push
    runs-on: ocean
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'
          cache: false

      - name: Delete Existing Tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          TAG_NAME="v${VERSION}"
          if git rev-parse $TAG_NAME >/dev/null 2>&1; then
            git tag -d $TAG_NAME
            git push --delete origin $TAG_NAME
          fi

      - name: Create a Single Tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV
          echo "Created TAG_NAME=$TAG_NAME"

      - name: Build Binary for Release
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          CGO_ENABLED=0 GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -o $BINARY_NAME -a -ldflags="-s -w" -installsuffix cgo

      - name: Verify Binary Existence
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Verifying binary existence..."
          ls -la $BINARY_NAME

      - name: Upload Release Assets
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}*

      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Assets to GitHub Release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}
          asset_name: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}
          asset_content_type: application/octet-stream
